/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_URL_H__
#define __EXTPROFILE_URL_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <runtime/ext/ext_url.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

inline Variant x_base64_decode(CStrRef data, bool strict = false) {
  FUNCTION_INJECTION_BUILTIN(base64_decode);
  return f_base64_decode(data, strict);
}

inline String x_base64_encode(CStrRef data) {
  FUNCTION_INJECTION_BUILTIN(base64_encode);
  return f_base64_encode(data);
}

inline Variant x_get_headers(CStrRef url, int format = 0) {
  FUNCTION_INJECTION_BUILTIN(get_headers);
  return f_get_headers(url, format);
}

inline Array x_get_meta_tags(CStrRef filename, bool use_include_path = false) {
  FUNCTION_INJECTION_BUILTIN(get_meta_tags);
  return f_get_meta_tags(filename, use_include_path);
}

inline Variant x_http_build_query(CVarRef formdata, CStrRef numeric_prefix = null_string, CStrRef arg_separator = "&") {
  FUNCTION_INJECTION_BUILTIN(http_build_query);
  return f_http_build_query(formdata, numeric_prefix, arg_separator);
}

inline Variant x_parse_url(CStrRef url, int component = -1) {
  FUNCTION_INJECTION_BUILTIN(parse_url);
  return f_parse_url(url, component);
}

inline String x_rawurldecode(CStrRef str) {
  FUNCTION_INJECTION_BUILTIN(rawurldecode);
  return f_rawurldecode(str);
}

inline String x_rawurlencode(CStrRef str) {
  FUNCTION_INJECTION_BUILTIN(rawurlencode);
  return f_rawurlencode(str);
}

inline String x_urldecode(CStrRef str) {
  FUNCTION_INJECTION_BUILTIN(urldecode);
  return f_urldecode(str);
}

inline String x_urlencode(CStrRef str) {
  FUNCTION_INJECTION_BUILTIN(urlencode);
  return f_urlencode(str);
}


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_URL_H__
