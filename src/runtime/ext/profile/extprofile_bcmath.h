/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_BCMATH_H__
#define __EXTPROFILE_BCMATH_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <runtime/ext/ext_bcmath.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

inline bool x_bcscale(int64 scale) {
  FUNCTION_INJECTION_BUILTIN(bcscale);
  return f_bcscale(scale);
}

inline String x_bcadd(CStrRef left, CStrRef right, int64 scale = -1) {
  FUNCTION_INJECTION_BUILTIN(bcadd);
  return f_bcadd(left, right, scale);
}

inline String x_bcsub(CStrRef left, CStrRef right, int64 scale = -1) {
  FUNCTION_INJECTION_BUILTIN(bcsub);
  return f_bcsub(left, right, scale);
}

inline int64 x_bccomp(CStrRef left, CStrRef right, int64 scale = -1) {
  FUNCTION_INJECTION_BUILTIN(bccomp);
  return f_bccomp(left, right, scale);
}

inline String x_bcmul(CStrRef left, CStrRef right, int64 scale = -1) {
  FUNCTION_INJECTION_BUILTIN(bcmul);
  return f_bcmul(left, right, scale);
}

inline String x_bcdiv(CStrRef left, CStrRef right, int64 scale = -1) {
  FUNCTION_INJECTION_BUILTIN(bcdiv);
  return f_bcdiv(left, right, scale);
}

inline String x_bcmod(CStrRef left, CStrRef right) {
  FUNCTION_INJECTION_BUILTIN(bcmod);
  return f_bcmod(left, right);
}

inline String x_bcpow(CStrRef left, CStrRef right, int64 scale = -1) {
  FUNCTION_INJECTION_BUILTIN(bcpow);
  return f_bcpow(left, right, scale);
}

inline Variant x_bcpowmod(CStrRef left, CStrRef right, CStrRef modulus, int64 scale = -1) {
  FUNCTION_INJECTION_BUILTIN(bcpowmod);
  return f_bcpowmod(left, right, modulus, scale);
}

inline Variant x_bcsqrt(CStrRef operand, int64 scale = -1) {
  FUNCTION_INJECTION_BUILTIN(bcsqrt);
  return f_bcsqrt(operand, scale);
}


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_BCMATH_H__
